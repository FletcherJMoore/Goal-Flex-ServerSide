// <auto-generated />
using System;
using Goal_Flex_ServerSide;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Goal_Flex_ServerSide.Migrations
{
    [DbContext(typeof(GoalFlexDbContext))]
    partial class GoalFlexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Strength Training"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cardio"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Flexibility"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Endurance"
                        },
                        new
                        {
                            Id = 5,
                            Name = "HIIT"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Core"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Plyometrics"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Weight Loss"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Mobility"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Rehabilitation"
                        });
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Instructions")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "http://dummyimage.com/250x150.png/ff0000/ffffff",
                            Instructions = "Start in a plank position, lower your chest to the ground, and push back up.",
                            Title = "Push-Ups",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Image = "http://dummyimage.com/250x150.png/00ff00/ffffff",
                            Instructions = "Stand with feet shoulder-width apart, bend your knees, and lower your hips.",
                            Title = "Squats",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Image = "http://dummyimage.com/250x150.png/0000ff/ffffff",
                            Instructions = "Hold your body in a straight line with your forearms and toes on the ground.",
                            Title = "Plank",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Image = "http://dummyimage.com/250x150.png/ffff00/000000",
                            Instructions = "Hold weights in each hand and curl them toward your shoulders.",
                            Title = "Bicep Curls",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Image = "http://dummyimage.com/250x150.png/ff00ff/ffffff",
                            Instructions = "Step forward with one leg, bend both knees, and lower your body.",
                            Title = "Lunges",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Image = "http://dummyimage.com/250x150.png/00ffff/000000",
                            Instructions = "Jump with your legs apart and your arms overhead, then return to the starting position.",
                            Title = "Jumping Jacks",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Image = "http://dummyimage.com/250x150.png/800080/ffffff",
                            Instructions = "Lift a barbell or weights from the ground to your thighs while keeping your back straight.",
                            Title = "Deadlifts",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Image = "http://dummyimage.com/250x150.png/ffa500/000000",
                            Instructions = "Start in a plank position and alternate bringing your knees toward your chest.",
                            Title = "Mountain Climbers",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Image = "http://dummyimage.com/250x150.png/008080/ffffff",
                            Instructions = "From a standing position, drop to a squat, kick your legs back into a plank, and then jump back up.",
                            Title = "Burpees",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Image = "http://dummyimage.com/250x150.png/c0c0c0/000000",
                            Instructions = "Lie on a bench, lower the barbell to your chest, and press it back up.",
                            Title = "Bench Press",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Calories")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Recipe")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = "350 kcal",
                            Image = "http://dummyimage.com/250x150.png/ff5733/ffffff",
                            Recipe = "Grill chicken breast and serve with mixed greens, cherry tomatoes, and vinaigrette.",
                            Title = "Grilled Chicken Salad",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Calories = "200 kcal",
                            Image = "http://dummyimage.com/250x150.png/33ff57/ffffff",
                            Recipe = "Sauté mixed vegetables in olive oil with soy sauce and garlic.",
                            Title = "Vegetable Stir-Fry",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Calories = "250 kcal",
                            Image = "http://dummyimage.com/250x150.png/3357ff/ffffff",
                            Recipe = "Toast whole-grain bread and top with mashed avocado and a sprinkle of salt.",
                            Title = "Avocado Toast",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Calories = "300 kcal",
                            Image = "http://dummyimage.com/250x150.png/ffff33/000000",
                            Recipe = "Blend protein powder, banana, almond milk, and spinach.",
                            Title = "Protein Smoothie",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Calories = "400 kcal",
                            Image = "http://dummyimage.com/250x150.png/ff33ff/ffffff",
                            Recipe = "Cook quinoa and top with black beans, corn, avocado, and salsa.",
                            Title = "Quinoa Bowl",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Calories = "350 kcal",
                            Image = "http://dummyimage.com/250x150.png/33ffff/000000",
                            Recipe = "Cook oats and top with fresh berries and a drizzle of honey.",
                            Title = "Oatmeal with Berries",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Calories = "450 kcal",
                            Image = "http://dummyimage.com/250x150.png/663399/ffffff",
                            Recipe = "Season salmon fillet with olive oil, lemon, and dill, then grill until cooked.",
                            Title = "Grilled Salmon",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Calories = "300 kcal",
                            Image = "http://dummyimage.com/250x150.png/cc0000/ffffff",
                            Recipe = "Wrap turkey slices, lettuce, and hummus in a whole-grain tortilla.",
                            Title = "Turkey Wrap",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Calories = "250 kcal",
                            Image = "http://dummyimage.com/250x150.png/66ff33/000000",
                            Recipe = "Simmer lentils with carrots, celery, onion, and vegetable broth.",
                            Title = "Lentil Soup",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Calories = "200 kcal",
                            Image = "http://dummyimage.com/250x150.png/ff9933/000000",
                            Recipe = "Layer Greek yogurt with granola and fresh fruit in a glass.",
                            Title = "Greek Yogurt Parfait",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "phellier0@technorati.com",
                            FirstName = "Pansy",
                            Image = "http://dummyimage.com/249x100.png/cc0000/ffffff",
                            LastName = "Hellier",
                            Uid = "1",
                            Username = "phellier0"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jgandey1@jigsy.com",
                            FirstName = "Judah",
                            Image = "http://dummyimage.com/174x100.png/cc0000/ffffff",
                            LastName = "Gandey",
                            Uid = "2",
                            Username = "jgandey1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jgeddis2@topsy.com",
                            FirstName = "Jesse",
                            Image = "http://dummyimage.com/185x100.png/cc0000/ffffff",
                            LastName = "Geddis",
                            Uid = "3",
                            Username = "jgeddis2"
                        },
                        new
                        {
                            Id = 4,
                            Email = "aantram3@quantcast.com",
                            FirstName = "Archambault",
                            Image = "http://dummyimage.com/223x100.png/dddddd/000000",
                            LastName = "Antram",
                            Uid = "4",
                            Username = "aantram3"
                        },
                        new
                        {
                            Id = 5,
                            Email = "nalyokhin4@alexa.com",
                            FirstName = "Nolan",
                            Image = "http://dummyimage.com/227x100.png/ff4444/ffffff",
                            LastName = "Alyokhin",
                            Uid = "5",
                            Username = "nalyokhin4"
                        },
                        new
                        {
                            Id = 6,
                            Email = "beves5@japanpost.jp",
                            FirstName = "Blaine",
                            Image = "http://dummyimage.com/153x100.png/ff4444/ffffff",
                            LastName = "Eves",
                            Uid = "6",
                            Username = "beves5"
                        },
                        new
                        {
                            Id = 7,
                            Email = "aaronovich6@google.cn",
                            FirstName = "Amelita",
                            Image = "http://dummyimage.com/168x100.png/dddddd/000000",
                            LastName = "Aronovich",
                            Uid = "7",
                            Username = "aaronovich6"
                        },
                        new
                        {
                            Id = 8,
                            Email = "nfalla7@ezinearticles.com",
                            FirstName = "Nicko",
                            Image = "http://dummyimage.com/225x100.png/cc0000/ffffff",
                            LastName = "Falla",
                            Uid = "8",
                            Username = "nfalla7"
                        },
                        new
                        {
                            Id = 9,
                            Email = "tmacewan8@berkeley.edu",
                            FirstName = "Trever",
                            Image = "http://dummyimage.com/218x100.png/ff4444/ffffff",
                            LastName = "Macewan",
                            Uid = "9",
                            Username = "tmacewan8"
                        },
                        new
                        {
                            Id = 10,
                            Email = "kenglefield9@jiathis.com",
                            FirstName = "Karoly",
                            Image = "http://dummyimage.com/110x100.png/dddddd/000000",
                            LastName = "Englefield",
                            Uid = "10",
                            Username = "kenglefield9"
                        },
                        new
                        {
                            Id = 11,
                            Email = "joeaverage@example.com",
                            FirstName = "Joe",
                            Image = "http://dummyimage.com/110x100.png/dddddd/000000",
                            LastName = "Average",
                            Uid = "11",
                            Username = "joeaverage9"
                        });
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Difficulty")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/5fa2dd/ffffff",
                            Time = "30 mins",
                            Title = "Morning Cardio",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Difficulty = "Easy",
                            Image = "http://dummyimage.com/200x200.png/ff4444/ffffff",
                            Time = "45 mins",
                            Title = "Yoga Session",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Difficulty = "Hard",
                            Image = "http://dummyimage.com/200x200.png/dddddd/000000",
                            Time = "20 mins",
                            Title = "HIIT Training",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Difficulty = "Hard",
                            Image = "http://dummyimage.com/200x200.png/cc0000/ffffff",
                            Time = "60 mins",
                            Title = "Strength Training",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Difficulty = "Easy",
                            Image = "http://dummyimage.com/200x200.png/00ff00/000000",
                            Time = "15 mins",
                            Title = "Evening Stretching",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/0000ff/ffffff",
                            Time = "50 mins",
                            Title = "Full Body Workout",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/ffcc00/000000",
                            Time = "25 mins",
                            Title = "Core Blast",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Difficulty = "Easy",
                            Image = "http://dummyimage.com/200x200.png/ff6666/ffffff",
                            Time = "35 mins",
                            Title = "Pilates Basics",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Difficulty = "Hard",
                            Image = "http://dummyimage.com/200x200.png/333333/ffffff",
                            Time = "40 mins",
                            Title = "Upper Body Burn",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/ff00ff/ffffff",
                            Time = "30 mins",
                            Title = "Lower Body Focus",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/ff5733/ffffff",
                            Time = "40 mins",
                            Title = "Cardio Blast",
                            UserId = 10
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Difficulty = "Easy",
                            Image = "http://dummyimage.com/200x200.png/33ff57/ffffff",
                            Time = "20 mins",
                            Title = "Stretch and Flex",
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Difficulty = "Hard",
                            Image = "http://dummyimage.com/200x200.png/3357ff/ffffff",
                            Time = "75 mins",
                            Title = "Power Lifting",
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            Difficulty = "Hard",
                            Image = "http://dummyimage.com/200x200.png/ffff33/000000",
                            Time = "15 mins",
                            Title = "Quick HIIT",
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Difficulty = "Easy",
                            Image = "http://dummyimage.com/200x200.png/ff33ff/ffffff",
                            Time = "30 mins",
                            Title = "Balance Training",
                            UserId = 5
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/33ffff/000000",
                            Time = "60 mins",
                            Title = "Endurance Run",
                            UserId = 6
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/663399/ffffff",
                            Time = "25 mins",
                            Title = "Core Strength",
                            UserId = 7
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            Difficulty = "Hard",
                            Image = "http://dummyimage.com/200x200.png/cc0000/ffffff",
                            Time = "50 mins",
                            Title = "Arm and Shoulder Routine",
                            UserId = 8
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            Difficulty = "Medium",
                            Image = "http://dummyimage.com/200x200.png/66ff33/000000",
                            Time = "45 mins",
                            Title = "Pilates Pro",
                            UserId = 9
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            Difficulty = "Easy",
                            Image = "http://dummyimage.com/200x200.png/ff9933/000000",
                            Time = "60 mins",
                            Title = "Evening Yoga",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Exercise", b =>
                {
                    b.HasOne("Goal_Flex_ServerSide.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Goal_Flex_ServerSide.Models.Workout", null)
                        .WithMany("Exercise")
                        .HasForeignKey("WorkoutId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Meal", b =>
                {
                    b.HasOne("Goal_Flex_ServerSide.Models.User", "User")
                        .WithMany("Meals")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Workout", b =>
                {
                    b.HasOne("Goal_Flex_ServerSide.Models.Category", "Category")
                        .WithMany("Workouts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Goal_Flex_ServerSide.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Category", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.User", b =>
                {
                    b.Navigation("Meals");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("Goal_Flex_ServerSide.Models.Workout", b =>
                {
                    b.Navigation("Exercise");
                });
#pragma warning restore 612, 618
        }
    }
}
